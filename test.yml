---
- name: SOPHOS FIREWALL ANSIBLE MODULE TESTING
  hosts: all
  gather_facts: false

  tasks:
    # - name: ADD IP HOST
    #   sophos.sophos_firewall.sfos_ip_host:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTHOST
    #     ip_address: 2.2.2.2
    #     state: query
    #   delegate_to: localhost

    # - name: ADD IP HOST TYPE NETWORK
    #   sophos.sophos_firewall.sfos_ip_host:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTNETWORK
    #     network: 2.2.2.0
    #     mask: 255.255.255.0
    #     host_type: network
    #     state: present
    #   delegate_to: localhost

    # - name: ADD IP HOST TYPE IPRANGE
    #   sophos.sophos_firewall.sfos_ip_host:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTRANGE
    #     start_ip: 1.1.1.1
    #     end_ip: 1.1.1.10
    #     host_type: range
    #     state: query
    #   delegate_to: localhost

    # - name: ADD IP HOSTGROUP
    #   sophos.sophos_firewall.sfos_ip_hostgroup:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: IGT_TESTHOSTGROUP
    #     # host_list:
    #     #   - TESTHOST3
    #     # description: Test hostgroup
    #     # action: remove        
    #     state: absent
    #   delegate_to: localhost

    # - name: ADD LOCAL ACL EXCEPTION RULE
    #   sophos.sophos_firewall.sfos_service_acl_exception:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TestExceptionRule
    #     # description: Test Exception Rule 3
    #     source_zone: Any
    #     source_list:
    #       # - TESTHOST1
    #       - TESTHOST2
    #     # dest_list:
    #     #   - TESTHOST3
    #     # service_list:
    #     #   - HTTPS
    #     action: drop
    #     update_action: replace
    #     state: absent
    #   delegate_to: localhost

    # - name: ADD FIREWALL RULE
    #   sophos.sophos_firewall.sfos_firewall_rule:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: IGT_TESTRULE
    #     position: before
    #     status: disable
    #     before_rulename: TestFirewallRule3
    #     src_networks:
    #       - testhost1
    #     dst_networks:
    #       - testhost3
    #     service_list:
    #       - HTTPS
    #     action: accept
    #     state: query
    #   delegate_to: localhost

  # - name: CREATE SERVICE
  #   sophos.sophos_firewall.sfos_service:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: IGT_TESTSERVICE
  #     type: tcporudp
  #     service_list:
  #       # - protocol: tcp
  #       #   src_port: 1:65535
  #       #   dst_port: 80
  #       # - protocol: tcp
  #       #   src_port: 1:65535
  #       #   dst_port: 443
  #       - protocol: tcp
  #         dst_port: 9999
  #     action: replace
  #     state: query
  #   delegate_to: localhost

  # - name: CREATE IP SERVICE
  #   sophos.sophos_firewall.sfos_service:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: IGT_TESTIPSERVICE
  #     type: icmp
  #     service_list:
  #       - icmp_type: "Echo Reply"
  #         icmp_code: "Any Code"
  #     state: absent
  #   delegate_to: localhost

    # - name: ADD SERVICE GROUP
    #   sophos.sophos_firewall.sfos_servicegroup:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTSERVICEGROUP
    #     service_list:
    #       # - HTTPS
    #       # - HTTP
    #       # - FTP
    #       - SMTP
    #     description: Test Service Group
    #     action: replace        
    #     state: absent
    #   delegate_to: localhost

    # - name: ADD FQDN HOST
    #   sophos.sophos_firewall.sfos_fqdn_host:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: "{{ item.name }}"
    #     fqdn: "{{ item.fqdn }}"
    #     # fqdn_group_list:
    #     #   - TESTFQDNHOSTGROUP
    #     description: Test FQDN host again       
    #     state: present
    #   loop:
    #     - name: TESTFQDNHOST1
    #       fqdn: testsophos1.com
    #     - name: TESTFQDNHOST2
    #       fqdn: testsophos2.com
    #   delegate_to: localhost

    # - name: ADD FQDN HOSTGROUP
    #   sophos.sophos_firewall.sfos_fqdn_hostgroup:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTFQDNHOSTGROUP
    #     fqdn_host_list:
    #       - TESTFQDNHOST1
    #     description: Test hostgroup
    #     # action: remove        
    #     state: present
    #   delegate_to: localhost

    # - name: XMLAPI MODULE
    #   sophos.sophos_firewall.sfos_xmlapi:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     xml_tag: MACHost
    #     name: "{{ item.name }}"
    #     # key: Name
    #     # value: TEST
    #     # operator: "="
    #     data: |
    #           <MACHost>
    #               <Name>{{ item.name }}</Name>
    #               <Description>Created by Ansible xmlapi module</Description>
    #               <Type>MACAddress</Type>
    #               <MACAddress>{{ item.mac }}</MACAddress>
    #           </MACHost>
    #     state: query
    #   delegate_to: localhost
    #   loop:
    #     - name: TESTMACHOST1
    #       mac: 00:16:76:49:33:01
    #     - name: TESTMACHOST2
    #       mac: 00:16:76:49:33:02

    # - name: Create User
    #   sophos.sophos_firewall.sfos_user:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     user: testuser2
    #     name: Test User 2
    #     description: Update password!
    #     user_password: Sup3rS3cr3tP@ssw0rd
    #     user_type: Administrator
    #     group: Open Group
    #     profile: Administrator
    #     email: test.user2@sophos.com
    #     state: absent
    #   delegate_to: localhost

    # - name: Update hostname settings
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     hostname_settings:
    #       hostname: sophos-firewall-dev1
    #       description: Automation Testing 1
    #     state: updated
    #   delegate_to: localhost

    # - name: Update webadmin settings
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     webadmin_settings:
    #       vpnportal_https_port: 444
    #       userportal_https_port: 4445
    #     state: updated
    #   delegate_to: localhost

    # - name: Update loginsecurity settings
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     login_security:
    #       logout_session: 120
    #       block_login: Enable
    #       unsuccessful_attempt: 3
    #       duration: 30
    #       minutes: 1
    #     state: updated
    #   delegate_to: localhost

    # - name: Update administrator password complexity settings
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     password_complexity:
    #       complexity_check: Enable
    #       enforce_min_length: Enable
    #       include_alpha: Enable
    #       include_numeric: Enable
    #       include_special: Enable
    #       min_length: 10
    #     state: updated
    #   delegate_to: localhost

    # - name: Update login disclaimer
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     login_disclaimer: true
    #     state: updated
    #   delegate_to: localhost

    # - name: Query admin settings
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     state: query
    #   delegate_to: localhost

    # - name: REVERT SETTINGS TO INITIAL
    #   sophos.sophos_firewall.sfos_admin_settings:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     hostname_settings:
    #       hostname: sophos-firewall-dev1
    #       description: Automation Testing 1
    #     webadmin_settings:
    #       vpnportal_https_port: 444
    #       userportal_https_port: 4445
    #     login_security:
    #       logout_session: 120
    #       block_login: Enable
    #       unsuccessful_attempt: 3
    #       duration: 30
    #       minutes: 1
    #     password_complexity:
    #       complexity_check: Enable
    #       enforce_min_length: Enable
    #       include_alpha: Enable
    #       include_numeric: Enable
    #       include_special: Enable
    #       min_length: 10
    #     login_disclaimer: Disable
    #     state: updated
    #   delegate_to: localhost

    # - name: UPDATE ZONE ADMIN SERVICES
    #   sophos.sophos_firewall.sfos_zone:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     name: TESTZONE
    #     sslvpn: Enable
    #     state: query
    #   delegate_to: localhost

  # - name: UPDATE DNS SETTINGS
  #   sophos.sophos_firewall.sfos_dns:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     ipv4_settings:
  #         dns_source: Static
  #         dns1: 1.1.1.1
  #         dns2: 2.2.2.2
  #         dns3: 3.3.3.3
  #     dnsquery_config: ChooseIPv4DNSServerOverIPv6
  #     state: updated
  #   delegate_to: localhost

    # - name: UPDATE TIME SETTINGS
    #   sophos.sophos_firewall.sfos_time:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     # timezone: Europe/London
    #     # date:
    #     #   year: 2024
    #     #   month: 12
    #     #   day: 25
    #     time:
    #       hour: 01
    #       minute: 01
    #       second: 01
    #     state: updated
    #   delegate_to: localhost

    # - name: UPDATE BACKUP SETTINGS
    #   sophos.sophos_firewall.sfos_backup:
    #     username: "{{ username }}"
    #     password: "{{ password }}"
    #     hostname: "{{ inventory_hostname }}"
    #     port: 4444
    #     verify: false
    #     mode: Mail
    #     prefix: devfirewall
    #     # ftp_server: ftp.sophos.com
    #     # ftp_username: ftpuser
    #     # ftp_password: ftppassword
    #     # ftp_path: home/backup
    #     frequency: Monthly
    #     # day: Sunday
    #     hour: 20
    #     minute: 30
    #     date: 1
    #     # encryption_password: test123
    #     email_address: testfirewall@sophos.com
    #     debug: true
    #     state: updated
    #   delegate_to: localhost

  # - name: CREATE READ ONLY DEVICE ACCESS PROFILE
  #   sophos.sophos_firewall.sfos_device_access_profile:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: ReadOnlyProfile
  #     default_permission: Read-Only
  #     state: present
  #   delegate_to: localhost

  # - name: UPDATE DEVICE ACCESS PROFILE
  #   sophos.sophos_firewall.sfos_device_access_profile:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: ReadOnlyProfile
  #     dashboard: Read-Write
  #     system:
  #       profile: Read-Only
  #       system_password: Read-Write
  #     state: absent
  #   delegate_to: localhost
  
  # - name: UPDATE MALWARE PROTECTION
  #   sophos.sophos_firewall.sfos_malware_protection:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     antivirus_engine: Avira
  #     state: updated
  #   delegate_to: localhost

  # - name: UPDATE ADVANCED THREAT PROTECTION
  #   sophos.sophos_firewall.sfos_atp:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     enabled: True
  #     log_policy: Log Only
  #     inspect_content: untrusted
  #     state: updated
  #   delegate_to: localhost

  # - name: UPDATE SNMP AGENT CONFIGURATION
  #   sophos.sophos_firewall.sfos_snmp_agent:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     # enabled: false
  #     # name: automationtest
  #     # description: Testing automation
  #     # location: AWS Ireland 
  #     # contact_person: Sophos IT
  #     agent_port: 171
  #     state: updated
  #   delegate_to: localhost

  # - name: Manage SNMPv3 User
  #   sophos.sophos_firewall.sfos_snmp_user:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: snmpv3user1
  #     accept_queries: Disable
  #     send_traps: Enable
  #     authorized_hosts:
  #         - 10.100.1.104
  #         - 10.100.1.105
  #     encryption_algorithm: AES
  #     encryption_password: sup3rs3cr3tp@ssw0rd
  #     authentication_algorithm: MD5
  #     authentication_password: sup3rs3cr3tp@ssw0rd
  #     state: present
  #   delegate_to: localhost

  # - name: Manage IPS protection
  #   sophos.sophos_firewall.sfos_ips:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     enabled: true
  #     state: updated
  #   delegate_to: localhost

  # - name: Create syslog server, all logging enabled
  #   sophos.sophos_firewall.sfos_syslog:
  #     username: "{{ username }}"
  #     password: "{{ password }}"
  #     hostname: "{{ inventory_hostname }}"
  #     port: 4444
  #     verify: false
  #     name: TestSyslog
  #     address: 10.10.1.100
  #     udp_port: 514
  #     secure_connection: Disable
  #     facility: DAEMON
  #     severity: Emergency
  #     format: Device standard
  #     default_logging: Enable
  #     state: updated
  #   delegate_to: localhost

  - name: Create syslog server, disable selected logs
    sophos.sophos_firewall.sfos_syslog:
      username: "{{ username }}"
      password: "{{ password }}"
      hostname: "{{ inventory_hostname }}"
      port: 4444
      verify: false
      name: TestSyslog
      address: 10.10.1.100
      udp_port: 514
      secure_connection: Disable
      facility: DAEMON
      severity: Emergency
      format: Device standard
      default_logging: Enable
      log_settings:
        security_policy:
          invalid_traffic: Disable
          icmp_errormessage: Disable
        content_filtering:
          ssl_tls: Disable
      state: present
    delegate_to: localhost
