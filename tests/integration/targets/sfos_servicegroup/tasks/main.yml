# Copyright 2023 Sophos Ltd.  All rights reserved.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)


- name: CHECK VARS
  ansible.builtin.fail:
    msg: | 
      Please ensure these variables are set in tests/integration/integration_config.yml: 
      sfos_username, sfos_password, sfos_hostname, sfos_port, sfos_verify
  when: sfos_username is not defined or
        sfos_password is not defined or
        sfos_hostname is not defined or
        sfos_port is not defined or
        sfos_verify is not defined

- name: SET VARS
  set_fact:
    sfos_connection_params: &sfos_connection_params
      username: "{{ sfos_username }}"
      password: "{{ sfos_password }}"
      hostname: "{{ sfos_hostname }}"
      port: "{{ sfos_port }}"
      verify: "{{ sfos_verify }}"
  no_log: true

- name: ENSURE IGT_TESTSERVICEGROUP DOES NOT EXIST
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    state: absent

- name: CREATE SERVICES
  sophos.sophos_firewall.sfos_service:
    <<: *sfos_connection_params
    name: "{{ item.name }}"
    type: tcporudp
    service_list:
      - protocol: "{{ item.protocol }}"
        dst_port: "{{ item.dst_port }}"
    state: present
  loop:
    - name: IGT_TESTSERVICE1
      protocol: tcp
      dst_port: 8001
    - name: IGT_TESTSERVICE2
      protocol: tcp
      dst_port: 8002
    - name: IGT_TESTSERVICE3
      protocol: tcp
      dst_port: 8003
    
- name: CREATE SERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    description: Created by integration testing
    service_list:
      - IGT_TESTSERVICE1
      - IGT_TESTSERVICE2
    state: present
  register: create_servicegroup

- name: ASSERTION CHECK FOR CREATE SERVICE GROUP
  assert:
    that: 
      - create_servicegroup is changed
      - create_servicegroup['api_response']['Response']['ServiceGroup']['Status']['@code'] == "200"
      - create_servicegroup['api_response']['Response']['ServiceGroup']['Status']['#text'] == "Configuration applied successfully."

- name: QUERY SERVICE GROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    state: query
  register: query_servicegroup

- name: ASSERTION CHECK FOR QUERY SERVICE GROUP 
  assert:
    that: 
      - query_servicegroup is not changed
      - query_servicegroup['api_response']['Response']['ServiceGroup']['Name'] == "IGT_TESTSERVICEGROUP"
      - query_servicegroup['api_response']['Response']['ServiceGroup']['ServiceList']['Service'] == ["IGT_TESTSERVICE1", "IGT_TESTSERVICE2"]

- name: CREATE EXISTING SERVICE GROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE1
      - IGT_TESTSERVICE2
    state: present
  register: create_existing

- name: ASSERTION CHECK FOR CREATE EXISTING SERVICE GROUP 
  assert:
    that: 
      - create_existing is not changed
      - create_existing['api_response']['Response']['ServiceGroup']['Name'] == "IGT_TESTSERVICEGROUP"

- name: ADD SERVICE TO SERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE3
    state: updated
    action: add
  register: update_servicegroup

- name: ASSERTION CHECK FOR UPDATE SERVICE GROUP 
  assert:
    that: 
      - update_servicegroup is changed
      - update_servicegroup['api_response']['Response']['ServiceGroup']['Status']['@code'] == "200"
      - update_servicegroup['api_response']['Response']['ServiceGroup']['Status']['#text'] == "Configuration applied successfully."

- name: UPDATE SERVICEGROUP NO CHANGE
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE1
      - IGT_TESTSERVICE2
      - IGT_TESTSERVICE3
    state: updated
    action: add
  register: update_nochange

- name: ASSERTION CHECK FOR UPDATE SERVICE GROUP NO CHANGE
  assert:
    that: 
      - update_nochange is not changed
      - update_nochange['api_response']['Response']['ServiceGroup']['Name'] == "IGT_TESTSERVICEGROUP"
      - "'IGT_TESTSERVICE1' in update_nochange['api_response']['Response']['ServiceGroup']['ServiceList']['Service']"
      - "'IGT_TESTSERVICE2' in update_nochange['api_response']['Response']['ServiceGroup']['ServiceList']['Service']"
      - "'IGT_TESTSERVICE3' in update_nochange['api_response']['Response']['ServiceGroup']['ServiceList']['Service']"

- name: REMOVE SERVICE FROM SERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE3
    state: updated
    action: remove
  register: update_servicegroup

- name: ASSERTION CHECK FOR UPDATE SERVICE GROUP 
  assert:
    that: 
      - update_servicegroup is changed
      - update_servicegroup['api_response']['Response']['ServiceGroup']['Status']['@code'] == "200"
      - update_servicegroup['api_response']['Response']['ServiceGroup']['Status']['#text'] == "Configuration applied successfully."

- name: REPLACE SERVICE LIST
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE1
    state: updated
    action: replace
  register: replace_servicegroup

- name: ASSERTION CHECK FOR REPLACE SERVICE LIST 
  assert:
    that: 
      - replace_servicegroup is changed
      - replace_servicegroup['api_response']['Response']['ServiceGroup']['Status']['@code'] == "200"
      - replace_servicegroup['api_response']['Response']['ServiceGroup']['Status']['#text'] == "Configuration applied successfully."

- name: QUERY SERVICE GROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    state: query
  register: query_servicegroup

- name: CHECK THAT SERVICELIST WAS REPLACED
  assert:
    that: 
      - query_servicegroup is not changed
      - query_servicegroup['api_response']['Response']['ServiceGroup']['Name'] == "IGT_TESTSERVICEGROUP"
      - query_servicegroup['api_response']['Response']['ServiceGroup']['ServiceList']['Service'] == "IGT_TESTSERVICE1"

- name: REMOVE TESTSERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    state: absent
  register: remove_servicegroup

- name: ASSERTION CHECK FOR REMOVE TESTSERVICE
  assert:
    that: 
      - remove_servicegroup is changed
      - remove_servicegroup['api_response']['Response']['ServiceGroup']['Status']['@code'] == "200"
      - remove_servicegroup['api_response']['Response']['ServiceGroup']['Status']['#text'] == "Configuration applied successfully."

- name: REMOVE NONEXISTING SERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    state: absent
  register: remove_nonexist

- name: ASSERTION CHECK FOR REMOVE NONEXISTING TESTSERVICE
  assert:
    that: 
      - remove_nonexist is not changed
      - remove_nonexist['api_response'] == "No. of records Zero."

- name: UPDATE NONEXISTING TESTSERVICEGROUP
  sophos.sophos_firewall.sfos_servicegroup:
    <<: *sfos_connection_params
    name: IGT_TESTSERVICEGROUP
    service_list:
      - IGT_TESTSERVICE1
    state: updated
    action: add
  register: update_nonexist
  ignore_errors: true

- name: ASSERTION CHECK FOR UPDATE NONEXISTING TESTSERVICE
  assert:
    that: 
      - update_nonexist is failed
      - update_nonexist['api_response'] == "No. of records Zero."

- name: REMOVE TEST SERVICES
  sophos.sophos_firewall.sfos_ip_host:
    <<: *sfos_connection_params
    name: "{{ item.name }}"
    state: absent
  loop:
    - name: IGT_TESTSERVICE1
    - name: IGT_TESTSERVICE2
    - name: IGT_TESTSERVICE3
