# Copyright 2023 Sophos Ltd.  All rights reserved.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)


- name: CHECK VARS
  ansible.builtin.fail:
    msg: | 
      Please ensure these variables are set in tests/integration/integration_config.yml: 
      sfos_username, sfos_password, sfos_hostname, sfos_port, sfos_verify
  when: sfos_username is not defined or
        sfos_password is not defined or
        sfos_hostname is not defined or
        sfos_port is not defined or
        sfos_verify is not defined

- name: SET VARS
  set_fact:
    sfos_connection_params: &sfos_connection_params
      username: "{{ sfos_username }}"
      password: "{{ sfos_password }}"
      hostname: "{{ sfos_hostname }}"
      port: "{{ sfos_port }}"
      verify: "{{ sfos_verify }}"
  no_log: true

- name: ENSURE IGT_TESTFQDNHOST DOES NOT EXIST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    state: absent
  
- name: CREATE FQDN HOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    fqdn: testsophos.com
    description: Created during integration testing
    state: present
  register: create_fqdn_host

- name: ASSERTION CHECK FOR CREATE FQDN HOST
  assert:
    that: 
      - create_fqdn_host is changed
      - create_fqdn_host['api_response']['Response']['FQDNHost']['Status']['@code'] == "200"
      - create_fqdn_host['api_response']['Response']['FQDNHost']['Status']['#text'] == "Configuration applied successfully."

- name: QUERY FQDN HOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    state: query
  register: query_fqdn_host

- name: ASSERTION CHECK FOR CREATE FQDN HOST 
  assert:
    that: 
      - query_fqdn_host is not changed
      - query_fqdn_host['api_response']['Response']['FQDNHost']['Name'] == "IGT_TESTFQDNHOST"
      - query_fqdn_host['api_response']['Response']['FQDNHost']['FQDN'] == 'testsophos.com'

- name: CREATE EXISTING FQDN HOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    fqdn: testsophos.com
    description: Created during integration testing
    state: present
  register: create_existing

- name: ASSERTION CHECK FOR CREATE EXISTING FQDN HOST 
  assert:
    that: 
      - create_existing is not changed
      - create_existing['api_response']['Response']['FQDNHost']['Name'] == "IGT_TESTFQDNHOST"

- name: REMOVE IGT_TESTFQDNHOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    state: absent
  register: remove_fqdn_host

- name: ASSERTION CHECK FOR REMOVE FQDN HOST
  assert:
    that: 
      - remove_fqdn_host is changed
      - remove_fqdn_host['api_response']['Response']['FQDNHost']['Status']['@code'] == "200"
      - remove_fqdn_host['api_response']['Response']['FQDNHost']['Status']['#text'] == "Configuration applied successfully."

- name: REMOVE NONEXISTING FQDN HOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    state: absent
  register: remove_nonexist

- name: ASSERTION CHECK FOR REMOVE NONEXISTING FQDN HOST
  assert:
    that: 
      - remove_nonexist is not changed
      - remove_nonexist['api_response'] == "No. of records Zero."

- name: UPDATE NONEXISTING FQDN HOST
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOST
    fqdn: testsophos.com
    description: Created during integration testing
    state: updated
  register: update_nonexist
  ignore_errors: true

- name: ASSERTION CHECK FOR UPDATE NONEXISTING FQDN HOST
  assert:
    that: 
      - update_nonexist is failed
      - update_nonexist['api_response'] == "No. of records Zero."