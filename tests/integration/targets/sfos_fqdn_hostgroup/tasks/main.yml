# Copyright 2023 Sophos Ltd.  All rights reserved.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)


- name: CHECK VARS
  ansible.builtin.fail:
    msg: | 
      Please ensure these variables are set in tests/integration/integration_config.yml: 
      sfos_username, sfos_password, sfos_hostname, sfos_port, sfos_verify
  when: sfos_username is not defined or
        sfos_password is not defined or
        sfos_hostname is not defined or
        sfos_port is not defined or
        sfos_verify is not defined

- name: SET VARS
  set_fact:
    sfos_connection_params: &sfos_connection_params
      username: "{{ sfos_username }}"
      password: "{{ sfos_password }}"
      hostname: "{{ sfos_hostname }}"
      port: "{{ sfos_port }}"
      verify: "{{ sfos_verify }}"
  no_log: true

- name: ENSURE IGT_TESTFQDNHOSTGROUP DOES NOT EXIST
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    state: absent

- name: CREATE FQDN HOSTS
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: "{{ item.name }}"
    fqdn: "{{ item.fqdn }}"
    state: present
  loop:
    - name: IGT_TESTFQDN1
      fqdn: sophostest1.com
    - name: IGT_TESTFQDN2
      fqdn: sophostest2.com
    - name: IGT_TESTFQDN3
      fqdn: sophostest3.com
    
- name: CREATE FQDN HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN1
      - IGT_TESTFQDN2
    state: present
  register: create_hostgroup

- name: ASSERTION CHECK FOR CREATE FQDN HOSTGROUP
  assert:
    that: 
      - create_hostgroup is changed
      - create_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['@code'] == "200"
      - create_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['#text'] == "Configuration applied successfully."

- name: QUERY FQDN HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    state: query
  register: query_hostgroup

- name: ASSERTION CHECK FOR QUERY FQDN HOST 
  assert:
    that: 
      - query_hostgroup is not changed
      - query_hostgroup['api_response']['Response']['FQDNHostGroup']['Name'] == "IGT_TESTFQDNHOSTGROUP"
      - query_hostgroup['api_response']['Response']['FQDNHostGroup']['FQDNHostList']['FQDNHost'] == ["IGT_TESTFQDN1", "IGT_TESTFQDN2"]

- name: CREATE EXISTING FQDN HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN1
      - IGT_TESTFQDN2
    state: present
  register: create_existing

- name: ASSERTION CHECK FOR CREATE EXISTING FQDN HOSTGROUP 
  assert:
    that: 
      - create_existing is not changed
      - create_existing['api_response']['Response']['FQDNHostGroup']['Name'] == "IGT_TESTFQDNHOSTGROUP"

- name: ADD HOST TO HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN3
    state: updated
    action: add
  register: update_hostgroup

- name: ASSERTION CHECK FOR UPDATE FQDN HOST 
  assert:
    that: 
      - update_hostgroup is changed
      - update_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['@code'] == "200"
      - update_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['#text'] == "Configuration applied successfully."

- name: UPDATE HOSTGROUP NO CHANGE
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN1
      - IGT_TESTFQDN2
      - IGT_TESTFQDN3
    state: updated
    action: add
  register: update_nochange

- name: ASSERTION CHECK FOR UPDATE FQDN HOST NO CHANGE
  assert:
    that: 
      - update_nochange is not changed
      - update_nochange['api_response']['Response']['FQDNHostGroup']['Name'] == "IGT_TESTFQDNHOSTGROUP"
      - "'IGT_TESTFQDN1' in update_nochange['api_response']['Response']['FQDNHostGroup']['FQDNHostList']['FQDNHost']"
      - "'IGT_TESTFQDN2' in update_nochange['api_response']['Response']['FQDNHostGroup']['FQDNHostList']['FQDNHost']"
      - "'IGT_TESTFQDN3' in update_nochange['api_response']['Response']['FQDNHostGroup']['FQDNHostList']['FQDNHost']"

- name: REMOVE HOST FROM HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN3
    state: updated
    action: remove
  register: update_hostgroup

- name: ASSERTION CHECK FOR UPDATE FQDN HOST 
  assert:
    that: 
      - update_hostgroup is changed
      - update_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['@code'] == "200"
      - update_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['#text'] == "Configuration applied successfully."

- name: REPLACE HOST LIST
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN1
    state: updated
    action: replace
  register: replace_hostgroup

- name: ASSERTION CHECK FOR REPLACE HOST LIST 
  assert:
    that: 
      - replace_hostgroup is changed
      - replace_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['@code'] == "200"
      - replace_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['#text'] == "Configuration applied successfully."

- name: QUERY FQDN HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    state: query
  register: query_hostgroup

- name: CHECK THAT HOSTLIST WAS REPLACED
  assert:
    that: 
      - query_hostgroup is not changed
      - query_hostgroup['api_response']['Response']['FQDNHostGroup']['Name'] == "IGT_TESTFQDNHOSTGROUP"
      - query_hostgroup['api_response']['Response']['FQDNHostGroup']['FQDNHostList']['FQDNHost'] == "IGT_TESTFQDN1"

- name: REMOVE TESTHOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    state: absent
  register: remove_hostgroup

- name: ASSERTION CHECK FOR REMOVE TESTHOST
  assert:
    that: 
      - remove_hostgroup is changed
      - remove_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['@code'] == "200"
      - remove_hostgroup['api_response']['Response']['FQDNHostGroup']['Status']['#text'] == "Configuration applied successfully."

- name: REMOVE NONEXISTING HOSTGROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    state: absent
  register: remove_nonexist

- name: ASSERTION CHECK FOR REMOVE NONEXISTING FQDN HOSTGROUP
  assert:
    that: 
      - remove_nonexist is not changed
      - remove_nonexist['api_response'] == "No. of records Zero."

- name: UPDATE NONEXISTING FQDN HOST GROUP
  sophos.sophos_firewall.sfos_fqdn_hostgroup:
    <<: *sfos_connection_params
    name: IGT_TESTFQDNHOSTGROUP
    fqdn_host_list:
      - IGT_TESTFQDN1
    state: updated
    action: add
  register: update_nonexist
  ignore_errors: true

- name: ASSERTION CHECK FOR UPDATE NONEXISTING TESTHOST
  assert:
    that: 
      - update_nonexist is failed
      - update_nonexist['api_response'] == "No. of records Zero."

- name: REMOVE TEST HOSTS
  sophos.sophos_firewall.sfos_fqdn_host:
    <<: *sfos_connection_params
    name: "{{ item.name }}"
    state: absent
  loop:
    - name: IGT_TESTFQDN1
    - name: IGT_TESTFQDN2
    - name: IGT_TESTFQDN3
